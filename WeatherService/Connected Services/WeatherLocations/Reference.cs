//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WeatherService.WeatherLocations {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ws.gismeteo.ru/", ConfigurationName="WeatherLocations.LocationsSoap")]
    public interface LocationsSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gismeteo.ru/FindByCoords", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WeatherService.WeatherLocations.LocationInfoShortResult FindByCoords(string user, double lat, double lng, int count, string language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gismeteo.ru/FindByCoords", ReplyAction="*")]
        System.Threading.Tasks.Task<WeatherService.WeatherLocations.LocationInfoShortResult> FindByCoordsAsync(string user, double lat, double lng, int count, string language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gismeteo.ru/FindByCoordsFull", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WeatherService.WeatherLocations.LocationInfoFullResult FindByCoordsFull(string user, double lat, double lng, int count, string language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gismeteo.ru/FindByCoordsFull", ReplyAction="*")]
        System.Threading.Tasks.Task<WeatherService.WeatherLocations.LocationInfoFullResult> FindByCoordsFullAsync(string user, double lat, double lng, int count, string language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gismeteo.ru/FindByName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WeatherService.WeatherLocations.LocationInfoShortResult FindByName(string serial, string name, int count, string language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gismeteo.ru/FindByName", ReplyAction="*")]
        System.Threading.Tasks.Task<WeatherService.WeatherLocations.LocationInfoShortResult> FindByNameAsync(string serial, string name, int count, string language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gismeteo.ru/FindByNameFull", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WeatherService.WeatherLocations.LocationInfoFullResult FindByNameFull(string serial, string name, int count, string language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gismeteo.ru/FindByNameFull", ReplyAction="*")]
        System.Threading.Tasks.Task<WeatherService.WeatherLocations.LocationInfoFullResult> FindByNameFullAsync(string serial, string name, int count, string language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gismeteo.ru/GetCountryName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WeatherService.WeatherLocations.GetNameResult GetCountryName(string serial, int id, string language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gismeteo.ru/GetCountryName", ReplyAction="*")]
        System.Threading.Tasks.Task<WeatherService.WeatherLocations.GetNameResult> GetCountryNameAsync(string serial, int id, string language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gismeteo.ru/GetRegionName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WeatherService.WeatherLocations.GetNameResult GetRegionName(string serial, int id, string language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gismeteo.ru/GetRegionName", ReplyAction="*")]
        System.Threading.Tasks.Task<WeatherService.WeatherLocations.GetNameResult> GetRegionNameAsync(string serial, int id, string language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gismeteo.ru/GetLocationName", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        WeatherService.WeatherLocations.GetNameResult GetLocationName(string serial, int id, string language);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gismeteo.ru/GetLocationName", ReplyAction="*")]
        System.Threading.Tasks.Task<WeatherService.WeatherLocations.GetNameResult> GetLocationNameAsync(string serial, int id, string language);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.gismeteo.ru/")]
    public partial class LocationInfoShortResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ServiceResult resultField;
        
        private LocationInfoShort[] dataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ServiceResult result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
                this.RaisePropertyChanged("result");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public LocationInfoShort[] data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
                this.RaisePropertyChanged("data");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.gismeteo.ru/")]
    public partial class ServiceResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ErrorCode errorCodeField;
        
        private string errorMessageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ErrorCode errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("errorCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("errorMessage");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.gismeteo.ru/")]
    public enum ErrorCode {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        BadSerial,
        
        /// <remarks/>
        WrongInputData,
        
        /// <remarks/>
        WrongLanguageProvided,
        
        /// <remarks/>
        DataNotFound,
        
        /// <remarks/>
        InternalError,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.gismeteo.ru/")]
    public partial class GetNameResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private ServiceResult resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ServiceResult result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
                this.RaisePropertyChanged("result");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.gismeteo.ru/")]
    public partial class LocationInfoFull : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string townField;
        
        private string countryField;
        
        private string regionField;
        
        private double distanceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string town {
            get {
                return this.townField;
            }
            set {
                this.townField = value;
                this.RaisePropertyChanged("town");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
                this.RaisePropertyChanged("country");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string region {
            get {
                return this.regionField;
            }
            set {
                this.regionField = value;
                this.RaisePropertyChanged("region");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public double distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
                this.RaisePropertyChanged("distance");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.gismeteo.ru/")]
    public partial class LocationInfoFullResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ServiceResult resultField;
        
        private LocationInfoFull[] dataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ServiceResult result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
                this.RaisePropertyChanged("result");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public LocationInfoFull[] data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
                this.RaisePropertyChanged("data");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.gismeteo.ru/")]
    public partial class LocationInfoShort : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private int idField;
        
        private double distanceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public double distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
                this.RaisePropertyChanged("distance");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface LocationsSoapChannel : WeatherService.WeatherLocations.LocationsSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LocationsSoapClient : System.ServiceModel.ClientBase<WeatherService.WeatherLocations.LocationsSoap>, WeatherService.WeatherLocations.LocationsSoap {
        
        public LocationsSoapClient() {
        }
        
        public LocationsSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LocationsSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LocationsSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LocationsSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WeatherService.WeatherLocations.LocationInfoShortResult FindByCoords(string user, double lat, double lng, int count, string language) {
            return base.Channel.FindByCoords(user, lat, lng, count, language);
        }
        
        public System.Threading.Tasks.Task<WeatherService.WeatherLocations.LocationInfoShortResult> FindByCoordsAsync(string user, double lat, double lng, int count, string language) {
            return base.Channel.FindByCoordsAsync(user, lat, lng, count, language);
        }
        
        public WeatherService.WeatherLocations.LocationInfoFullResult FindByCoordsFull(string user, double lat, double lng, int count, string language) {
            return base.Channel.FindByCoordsFull(user, lat, lng, count, language);
        }
        
        public System.Threading.Tasks.Task<WeatherService.WeatherLocations.LocationInfoFullResult> FindByCoordsFullAsync(string user, double lat, double lng, int count, string language) {
            return base.Channel.FindByCoordsFullAsync(user, lat, lng, count, language);
        }
        
        public WeatherService.WeatherLocations.LocationInfoShortResult FindByName(string serial, string name, int count, string language) {
            return base.Channel.FindByName(serial, name, count, language);
        }
        
        public System.Threading.Tasks.Task<WeatherService.WeatherLocations.LocationInfoShortResult> FindByNameAsync(string serial, string name, int count, string language) {
            return base.Channel.FindByNameAsync(serial, name, count, language);
        }
        
        public WeatherService.WeatherLocations.LocationInfoFullResult FindByNameFull(string serial, string name, int count, string language) {
            return base.Channel.FindByNameFull(serial, name, count, language);
        }
        
        public System.Threading.Tasks.Task<WeatherService.WeatherLocations.LocationInfoFullResult> FindByNameFullAsync(string serial, string name, int count, string language) {
            return base.Channel.FindByNameFullAsync(serial, name, count, language);
        }
        
        public WeatherService.WeatherLocations.GetNameResult GetCountryName(string serial, int id, string language) {
            return base.Channel.GetCountryName(serial, id, language);
        }
        
        public System.Threading.Tasks.Task<WeatherService.WeatherLocations.GetNameResult> GetCountryNameAsync(string serial, int id, string language) {
            return base.Channel.GetCountryNameAsync(serial, id, language);
        }
        
        public WeatherService.WeatherLocations.GetNameResult GetRegionName(string serial, int id, string language) {
            return base.Channel.GetRegionName(serial, id, language);
        }
        
        public System.Threading.Tasks.Task<WeatherService.WeatherLocations.GetNameResult> GetRegionNameAsync(string serial, int id, string language) {
            return base.Channel.GetRegionNameAsync(serial, id, language);
        }
        
        public WeatherService.WeatherLocations.GetNameResult GetLocationName(string serial, int id, string language) {
            return base.Channel.GetLocationName(serial, id, language);
        }
        
        public System.Threading.Tasks.Task<WeatherService.WeatherLocations.GetNameResult> GetLocationNameAsync(string serial, int id, string language) {
            return base.Channel.GetLocationNameAsync(serial, id, language);
        }
    }
}
